
io = #use("io");
time = #use("time");
#include("qsort.fun");
t1 = time.time(qsort, [6,5,9,12,67,99,12,5,9,6,8,7,0,23,51,23,59,63,61,12,73,
		       16,25,39,42,17,19,82,55,49,76,18,17,10,13,91,13,89,
		       916,925,939,942,917,919,982,955,949,976,918,917,910,
		       116,125,139,142,117,119,182,155,149,176,118,117,110,
		       816,825,839,842,817,819,882,855,849,876,818,817,810,
		       216,225,239,242,217,219,282,255,249,276,218,217,210,
		       716,725,739,742,717,719,782,755,749,776,718,717,710,
		       316,325,339,342,317,319,382,355,349,376,318,317,310,
		       616,625,639,642,617,619,682,655,649,676,618,617,610,
		       416,425,439,442,417,419,482,455,449,476,418,417,410,
		       516,525,539,542,517,519,582,555,549,576,518,517,510,
		       86,85,89,82,37,39,32,35,39,86,88,87,80,83,31,33,39]);

#include("fac.fun");
t2 = time.time(factorial, 170.0);

#include("fib.fun");
t3 = time.time(fib, 92);
t4 = time.time((){fib(92)}); // this is the same

// non end recursion, inefficient
fib2 = (n) {
    n <= 1 ? n : fib2(n-1) + fib2(n-2)
};

// Clojure reported 1 sec for (35)
t4 = time.time(fib2, 27);

							//              -O
io.println("qsort time is ", t1*1000, " ms");           // 21           14
io.println("factorial time is ", t2*1000, " ms");       // 0.5          0.7
io.println("fib time is ", t3*1000, " ms");             // 0.3          0.4
io.println("fib2 time is ", t4*1000, " ms");            // 1470         600

